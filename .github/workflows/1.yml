name: 上传测试

on:
  schedule:
    - cron: '0 0 * * 5'  # 每星期五 UTC 时间 00:00 触发
  workflow_dispatch:  # 允许手动触发

jobs:
  job1:
    runs-on: ubuntu-latest

    steps:
      - name: 同步更新软件源
        uses: actions/checkout@v3

      - name: Get previous release ID
        id: get-release
        run: |
          # 获取最新 Release 的信息（排除草稿和预发布）
          RELEASE_JSON=$(curl -s -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          RELEASE_ID=$(echo "$RELEASE_JSON" | jq -r '.id')
          TAG_NAME=$(echo "$RELEASE_JSON" | jq -r '.tag_name')

          # 输出变量供后续步骤使用
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Delete previous release
        if: env.RELEASE_ID != 'null'
        run: |
          # 删除 Release
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}"

          # 删除关联的标签
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/${{ env.TAG_NAME }}"
        
        
          
      - name: Copy folder from source to target
        run: |
          git clone https://github.com/zjt37/zheng.git
          ls

      - name: Get current timestamp
        id: timestamp
        run: |
          echo "CURRENT_TIMESTAMP=$(date -u +"%Y%m%d%H%M%S")" >> $GITHUB_ENV
          


      - name: Upload firmware
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.SOURCE_REPO_TOKEN }}
          file: zheng/clash.ini
          asset_name: openclash.ini
          tag: openwrt-${{ env.CURRENT_TIMESTAMP }}
          overwrite: true
