name: 编译openwrt固件

on:
  schedule:
    - cron: '0 0 * * 5'  # 每星期五 UTC 时间 00:00 触发
  workflow_dispatch:  # 允许手动触发

jobs:
  job1:
    runs-on: ubuntu-latest

    steps:
      - name: 同步更新软件源
        uses: actions/checkout@v3
        
      - name: Run a script
        run: echo "This is job1"

      - name: Configure Git
        run: |
          git config --global user.name "zjt37"
          git config --global user.email "27096491@qq.com"

      - name: Clone target repository
        run: |
          git clone https://${{ secrets.SOURCE_REPO_TOKEN }}@github.com/zjt37/packages.git
          cd packages
          git checkout main  # 切换到目标仓库的分支

      - name: Copy folder from source to target
        run: |
          git clone https://github.com/vernesong/OpenClash.git
          git clone https://github.com/xiaorouji/openwrt-passwall.git
          git clone https://github.com/nikkinikki-org/OpenWrt-nikki.git
          git clone https://github.com/fw876/helloworld.git
          cp -r ./openwrt-passwall/luci-app-passwall ./packages/
          cp -r ./OpenClash/luci-app-openclash ./packages/
          cp -r ./OpenWrt-nikki/nikki ./packages/
          cp -r ./OpenWrt-nikki/luci-app-nikki ./packages/
          cp -r ./helloworld/chinadns-ng ./packages/helloworld/
          cp -r ./helloworld/dns2socks ./packages/helloworld/
          cp -r ./helloworld/dns2tcp ./packages/helloworld/
          cp -r ./helloworld/gn ./packages/helloworld/
          cp -r ./helloworld/hysteria ./packages/helloworld/
          cp -r ./helloworld/ipt2socks ./packages/helloworld/
          cp -r ./helloworld/lua-neturl ./packages/helloworld/
          cp -r ./helloworld/microsocks ./packages/helloworld/
          cp -r ./helloworld/mosdns ./packages/helloworld/
          cp -r ./helloworld/naiveproxy ./packages/helloworld/
          cp -r ./helloworld/redsocks2 ./packages/helloworld/
          cp -r ./helloworld/shadow-tls ./packages/helloworld/
          cp -r ./helloworld/shadowsocks-libev ./packages/helloworld/
          cp -r ./helloworld/shadowsocks-rust ./packages/helloworld/
          cp -r ./helloworld/shadowsocksr-libev ./packages/helloworld/
          cp -r ./helloworld/simple-obfs ./packages/helloworld/
          cp -r ./helloworld/tcping ./packages/helloworld/
          cp -r ./helloworld/trojan ./packages/helloworld/
          cp -r ./helloworld/tuic-client ./packages/helloworld/
          cp -r ./helloworld/v2ray-core ./packages/helloworld/
          cp -r ./helloworld/v2ray-plugin ./packages/helloworld/
          cp -r ./helloworld/v2raya ./packages/helloworld/
          cp -r ./helloworld/xray-core ./packages/helloworld/
          cp -r ./helloworld/xray-plugin ./packages/helloworld/
          cp -r ./helloworld/luci-app-ssr-plus ./packages/

      - name: Commit and push changes to target repository
        run: |
          cd packages
          git add .
          git commit --allow-empty -m "Sync folder from source repository (no changes detected)"
          git push origin main
          
  job2:
    runs-on: ubuntu-22.04
    needs: job1

    steps:
      - name: 准备开始
        uses: actions/checkout@main

      - name: Run another script
        run: echo "This is job2, running after job1"

      - name: 清理磁盘空间
        uses: easimon/maximize-build-space@master
        with: 
          root-reserve-mb: 2048
          swap-size-mb: 1
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: 安装系统依赖
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
          libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
          vim wget xmlto xxd zlib1g-dev python3-setuptools
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo rm -rf /etc/apt/sources.list.d/* /usr/local/lib/android /opt/ghc /usr/share/dotnet /usr/local/graalvm /usr/local/.ghcup \
          /usr/local/share/powershell /usr/local/share/chromium /usr/local/lib/node_modules
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"
      
      - name: 下载固件源码
        working-directory: ./
        run: |
          git clone https://github.com/coolsnowwolf/lede

      - name: 更新和安装软件包
        run: |
          cd lede
          rm -f ./feeds.conf.default
          touch ./feeds.conf.default
          echo "src-git packages https://github.com/coolsnowwolf/packages" >> "feeds.conf.default"
          echo "src-git luci https://github.com/coolsnowwolf/luci" >> "feeds.conf.default"
          echo "src-git routing https://github.com/coolsnowwolf/routing" >> "feeds.conf.default"
          echo "src-git telephony https://github.com/openwrt/telephony.git;openwrt-23.05" >> "feeds.conf.default"
          echo 'src-git helloworld https://github.com/fw876/helloworld' >>feeds.conf.default
          echo "src-git zheng https://github.com/zjt37/packages.git;main" >> "feeds.conf.default"
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install -a

      - name: 常用配置修改
        run: |
          cd lede
          sed -i 's/192.168.1.1/192.168.2.3/g' package/base-files/files/bin/config_generate
          sed -i "s/hostname='.*'/hostname='openwrt'/g" package/base-files/files/bin/config_generate
          sed -i 's/KERNEL_PATCHVER:=6.6/KERNEL_PATCHVER:=6.12/g' ./target/linux/x86/Makefile
          sed -i 's/os.date()/os.date("%Y-%m-%d %H:%M:%S")/g' package/lean/autocore/files/*/index.htm
          sed -i 's/${g}.*/${a}${b}${c}${d}${e}${f}${hydrid}/g' package/lean/autocore/files/x86/autocore
          sed -i 's/ShadowSocksR Plus+/SSR Plus+/g' package/feeds/helloworld/luci-app-ssr-plus/luasrc/controller/shadowsocksr.lua

      - name: 配置固件文件
        run: |
          cd lede
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          # CONFIG_GRUB_EFI_IMAGES is not set
          CONFIG_GRUB_IMAGES=y
          # CONFIG_KERNEL_BTRFS_FS_POSIX_ACL is not set
          # CONFIG_KERNEL_CIFS_ACL is not set
          # CONFIG_KERNEL_EXT4_FS_POSIX_ACL is not set
          # CONFIG_KERNEL_EXT4_FS_SECURITY is not set
          # CONFIG_KERNEL_F2FS_FS_POSIX_ACL is not set
          # CONFIG_KERNEL_F2FS_FS_SECURITY is not set
          # CONFIG_KERNEL_FS_POSIX_ACL is not set
          # CONFIG_KERNEL_HFSPLUS_FS_POSIX_ACL is not set
          # CONFIG_KERNEL_HFS_FS_POSIX_ACL is not set
          # CONFIG_KERNEL_JFFS2_FS_POSIX_ACL is not set
          # CONFIG_KERNEL_JFFS2_FS_SECURITY is not set
          # CONFIG_KERNEL_JFS_POSIX_ACL is not set
          # CONFIG_KERNEL_NET_L3_MASTER_DEV is not set
          # CONFIG_KERNEL_NFS_ACL_SUPPORT is not set
          # CONFIG_KERNEL_REISER_FS_POSIX_ACL is not set
          # CONFIG_KERNEL_TMPFS_POSIX_ACL is not set
          # CONFIG_KERNEL_UBIFS_FS_SECURITY is not set
          # CONFIG_KERNEL_XFS_POSIX_ACL is not set
          CONFIG_NODEJS_18=y
          # CONFIG_NODEJS_22 is not set
          CONFIG_OPENSSH_LIBFIDO2=y
          CONFIG_PACKAGE_6in4=y
          # CONFIG_PACKAGE_automount is not set
          # CONFIG_PACKAGE_autosamba is not set
          CONFIG_PACKAGE_autossh=y
          CONFIG_PACKAGE_avahi-dbus-daemon=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_blkid=y
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-date_time=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_dbus=y
          # CONFIG_PACKAGE_etherwake is not set
          CONFIG_PACKAGE_geoview=y
          # CONFIG_PACKAGE_grub2-efi is not set
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_hysteria=y
          CONFIG_PACKAGE_i915-firmware=y
          CONFIG_PACKAGE_i915-firmware-gsc=y
          CONFIG_PACKAGE_i915-firmware-guc=y
          CONFIG_PACKAGE_i915-firmware-huc=y
          CONFIG_PACKAGE_ip6tables-extra=y
          CONFIG_PACKAGE_ip6tables-mod-nat=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_iptables-mod-iprange=y
          CONFIG_PACKAGE_iptables-mod-socket=y
          CONFIG_PACKAGE_ipv6helper=y
          # CONFIG_PACKAGE_kmod-crypto-ccm is not set
          # CONFIG_PACKAGE_kmod-crypto-cmac is not set
          # CONFIG_PACKAGE_kmod-crypto-des is not set
          # CONFIG_PACKAGE_kmod-crypto-md4 is not set
          # CONFIG_PACKAGE_kmod-crypto-md5 is not set
          # CONFIG_PACKAGE_kmod-crypto-sha256 is not set
          # CONFIG_PACKAGE_kmod-fs-exfat is not set
          # CONFIG_PACKAGE_kmod-fs-ext4 is not set
          # CONFIG_PACKAGE_kmod-fs-ksmbd is not set
          # CONFIG_PACKAGE_kmod-fs-ntfs3 is not set
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-ip6tables-extra=y
          CONFIG_PACKAGE_kmod-ipt-iprange=y
          # CONFIG_PACKAGE_kmod-ipt-offload is not set
          CONFIG_PACKAGE_kmod-ipt-socket=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-iptunnel4=y
          # CONFIG_PACKAGE_kmod-lib-crc16 is not set
          CONFIG_PACKAGE_kmod-netlink-diag=y
          # CONFIG_PACKAGE_kmod-nf-conntrack-netlink is not set
          # CONFIG_PACKAGE_kmod-nf-flow is not set
          CONFIG_PACKAGE_kmod-nf-socket=y
          # CONFIG_PACKAGE_kmod-oid-registry is not set
          # CONFIG_PACKAGE_kmod-scsi-core is not set
          CONFIG_PACKAGE_kmod-sit=y
          # CONFIG_PACKAGE_kmod-tcp-bbr is not set
          # CONFIG_PACKAGE_kmod-usb-storage is not set
          # CONFIG_PACKAGE_kmod-usb-storage-extras is not set
          # CONFIG_PACKAGE_kmod-usb-storage-uas is not set
          # CONFIG_PACKAGE_ksmbd-server is not set
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libavahi-dbus-support=y
          CONFIG_PACKAGE_libcap=y
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libcbor=y
          CONFIG_PACKAGE_libdaemon=y
          CONFIG_PACKAGE_libdbus=y
          CONFIG_PACKAGE_libeudev=y
          CONFIG_PACKAGE_libexpat=y
          CONFIG_PACKAGE_libfido2=y
          CONFIG_PACKAGE_libgmp=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_libnetsnmp=y
          # CONFIG_PACKAGE_libnl-core is not set
          # CONFIG_PACKAGE_libnl-genl is not set
          CONFIG_PACKAGE_libparted=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libssh=y
          CONFIG_PACKAGE_libstdcpp=y
          CONFIG_PACKAGE_libyaml=y
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-arpbind is not set
          # CONFIG_PACKAGE_luci-app-ddns is not set
          CONFIG_PACKAGE_luci-app-diskman=y
          # CONFIG_PACKAGE_luci-app-ksmbd is not set
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Geoview=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Haproxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Hysteria=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Server=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Simple_Obfs=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_SingBox=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_Plus=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Plugin=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray=y
          CONFIG_PACKAGE_luci-app-passwall_Iptables_Transparent_Proxy=y
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ChinaDNS_NG=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Hysteria=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_IPT2Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          # CONFIG_PACKAGE_luci-app-turboacc is not set
          # CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_BBR_CCA is not set
          # CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_OFFLOADING is not set
          # CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_PDNSD is not set
          # CONFIG_PACKAGE_luci-app-unblockmusic_INCLUDE_UnblockNeteaseMusic_Go is not set
          # CONFIG_PACKAGE_luci-app-upnp is not set
          # CONFIG_PACKAGE_luci-app-vlmcsd is not set
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          # CONFIG_PACKAGE_luci-app-wol is not set
          CONFIG_PACKAGE_luci-i18n-diskman-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-theme-atmaterial_new=y
          # CONFIG_PACKAGE_miniupnpd is not set
          # CONFIG_PACKAGE_nlbwmon is not set
          CONFIG_PACKAGE_openssh-client=y
          CONFIG_PACKAGE_openssh-client-utils=y
          CONFIG_PACKAGE_openssh-keygen=y
          CONFIG_PACKAGE_openssh-moduli=y
          CONFIG_PACKAGE_openssh-server=y
          CONFIG_PACKAGE_openssh-sftp-avahi-service=y
          CONFIG_PACKAGE_openssh-sftp-client=y
          CONFIG_PACKAGE_openssh-sftp-server=y
          CONFIG_PACKAGE_parted=y
          # CONFIG_PACKAGE_pdnsd-alt is not set
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          CONFIG_PACKAGE_sing-box=y
          CONFIG_PACKAGE_smartmontools=y
          CONFIG_PACKAGE_snmpd=y
          CONFIG_PACKAGE_sshtunnel=y
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_trojan-plus=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-plugin=y
          # CONFIG_PACKAGE_vlmcsd is not set
          # CONFIG_PACKAGE_vsftpd-alt is not set
          # CONFIG_PACKAGE_wol is not set
          # CONFIG_PACKAGE_wsdd2 is not set
          CONFIG_PARTED_READLINE=y
          CONFIG_SING_BOX_WITH_CLASH_API=y
          CONFIG_SING_BOX_WITH_DHCP=y
          CONFIG_SING_BOX_WITH_ECH=y
          CONFIG_SING_BOX_WITH_GVISOR=y
          CONFIG_SING_BOX_WITH_QUIC=y
          CONFIG_SING_BOX_WITH_UTLS=y
          CONFIG_SING_BOX_WITH_WIREGUARD=y
          # CONFIG_TARGET_IMAGES_GZIP is not set
          CONFIG_TARGET_KERNEL_PARTSIZE=200
          CONFIG_TARGET_ROOTFS_PARTSIZE=700
          # CONFIG_USE_FS_ACL_ATTR is not set
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          # CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_SHORTCUT_FE_CM is not set
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
  
      - name: 下载DL库
        run: |
          cd lede
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 开始编译固件
        run: |
          cd lede
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s

      - name: 上传固件
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt
          path: lede/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined.img

      - name: 获取release ID
        id: get-release
        run: |
          # 获取最新 Release 的信息（排除草稿和预发布）
          RELEASE_JSON=$(curl -s -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          RELEASE_ID=$(echo "$RELEASE_JSON" | jq -r '.id')
          TAG_NAME=$(echo "$RELEASE_JSON" | jq -r '.tag_name')

          # 输出变量供后续步骤使用
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: 删除上次release
        if: env.RELEASE_ID != 'null'
        run: |
          # 删除 Release
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}"

          # 删除关联的标签
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/${{ env.TAG_NAME }}"  

      - name: 获取发布时间
        id: timestamp
        run: |
          echo "CURRENT_TIMESTAMP=$(date -u +"%Y%m%d%H%M%S")" >> $GITHUB_ENV

      - name: 发布固件
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.SOURCE_REPO_TOKEN }}
          file: lede/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined.img
          asset_name: openwrt.img
          tag: openwrt-${{ env.CURRENT_TIMESTAMP }}
          overwrite: true          
            
          

      - name: 删除上次运行记录
        env:
          GH_TOKEN: ${{ secrets.SOURCE_REPO_TOKEN }}
        run: |
          current_run_id=$(curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs \
            | jq -r '.workflow_runs[0].id')
          previous_run_id=$(curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs \
            | jq -r '.workflow_runs[1].id')
          curl -X DELETE -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/$previous_run_id





          
