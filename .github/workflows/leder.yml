name: 编译openwrt固件

on:
  schedule:
    - cron: '0 0 * * 5'  # 每星期五 UTC 时间 00:00 触发
  workflow_dispatch:  # 允许手动触发

jobs:
  job1:
    runs-on: ubuntu-latest

    steps:
      - name: 同步更新软件源
        uses: actions/checkout@v3
        
      - name: Run a script
        run: echo "This is job1"

      - name: Configure Git
        run: |
          git config --global user.name "zjt37"
          git config --global user.email "27096491@qq.com"

      - name: Clone target repository
        run: |
          git clone https://${{ secrets.SOURCE_REPO_TOKEN }}@github.com/zjt37/packages.git
          cd packages
          git checkout main  # 切换到目标仓库的分支

      - name: Copy folder from source to target
        run: |
          git clone https://github.com/vernesong/OpenClash.git
          git clone https://github.com/xiaorouji/openwrt-passwall.git
          git clone https://github.com/nikkinikki-org/OpenWrt-nikki.git
          git clone https://github.com/fw876/helloworld.git
          git clone https://github.com/jerrykuku/luci-theme-argon.git
          cp -r ./openwrt-passwall/luci-app-passwall ./packages/
          cp -r ./OpenClash/luci-app-openclash ./packages/
          cp -r ./OpenWrt-nikki/nikki ./packages/
          cp -r ./OpenWrt-nikki/luci-app-nikki ./packages/
          cp -r ./helloworld/chinadns-ng ./packages/helloworld/
          cp -r ./helloworld/dns2socks ./packages/helloworld/
          cp -r ./helloworld/dns2tcp ./packages/helloworld/
          cp -r ./helloworld/gn ./packages/helloworld/
          cp -r ./helloworld/hysteria ./packages/helloworld/
          cp -r ./helloworld/ipt2socks ./packages/helloworld/
          cp -r ./helloworld/lua-neturl ./packages/helloworld/
          cp -r ./helloworld/microsocks ./packages/helloworld/
          cp -r ./helloworld/mosdns ./packages/helloworld/
          cp -r ./helloworld/naiveproxy ./packages/helloworld/
          cp -r ./helloworld/redsocks2 ./packages/helloworld/
          cp -r ./helloworld/shadow-tls ./packages/helloworld/
          cp -r ./helloworld/shadowsocks-libev ./packages/helloworld/
          cp -r ./helloworld/shadowsocks-rust ./packages/helloworld/
          cp -r ./helloworld/shadowsocksr-libev ./packages/helloworld/
          cp -r ./helloworld/simple-obfs ./packages/helloworld/
          cp -r ./helloworld/tcping ./packages/helloworld/
          cp -r ./helloworld/trojan ./packages/helloworld/
          cp -r ./helloworld/tuic-client ./packages/helloworld/
          cp -r ./helloworld/v2ray-core ./packages/helloworld/
          cp -r ./helloworld/v2ray-plugin ./packages/helloworld/
          cp -r ./helloworld/v2raya ./packages/helloworld/
          cp -r ./helloworld/xray-core ./packages/helloworld/
          cp -r ./helloworld/xray-plugin ./packages/helloworld/
          cp -r ./helloworld/luci-app-ssr-plus ./packages/
          cp -r ./luci-theme-argon/Screenshots ./packages/luci-theme-argon/
          cp -r ./luci-theme-argon/htdocs ./packages/luci-theme-argon/
          cp -r ./luci-theme-argon/less ./packages/luci-theme-argon/
          cp -r ./luci-theme-argon/luasrc ./packages/luci-theme-argon/
          cp -r ./luci-theme-argon/root ./packages/luci-theme-argon/
          cp ./luci-theme-argon/Makefile ./packages/luci-theme-argon/
          

      - name: Commit and push changes to target repository
        run: |
          cd packages
          git add .
          git commit --allow-empty -m "Sync folder from source repository (no changes detected)"
          git push origin main
          
  job2:
    runs-on: ubuntu-22.04
    needs: job1

    steps:
      - name: 准备开始
        uses: actions/checkout@main

      - name: Run another script
        run: echo "This is job2, running after job1"

      - name: 清理磁盘空间
        uses: easimon/maximize-build-space@master
        with: 
          root-reserve-mb: 2048
          swap-size-mb: 1
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: 安装系统依赖
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
          libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
          vim wget xmlto xxd zlib1g-dev python3-setuptools
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo rm -rf /etc/apt/sources.list.d/* /usr/local/lib/android /opt/ghc /usr/share/dotnet /usr/local/graalvm /usr/local/.ghcup \
          /usr/local/share/powershell /usr/local/share/chromium /usr/local/lib/node_modules
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"
      
      - name: 下载固件源码
        working-directory: ./
        run: |
          git clone https://github.com/openwrt/openwrt.git lede

      - name: 更新和安装软件包
        run: |
          cd lede
          rm -f ./feeds.conf.default
          touch ./feeds.conf.default
          echo "src-git packages https://github.com/openwrt/packages.git" >> "feeds.conf.default"
          echo "src-git luci https://github.com/openwrt/luci.git" >> "feeds.conf.default"
          echo "src-git routing https://github.com/openwrt/routing.git" >> "feeds.conf.default"
          echo "src-git video https://github.com/openwrt/video.git" >> "feeds.conf.default"
          echo "src-git telephony https://github.com/openwrt/telephony.git" >> "feeds.conf.default"
          echo "src-git zheng https://github.com/zjt37/packages.git;main" >> "feeds.conf.default"
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install -a

      - name: 常用配置修改
        run: |
          cd lede
          PASSWORD="password"
          HASH=$(openssl passwd -1 "$PASSWORD")
          sed -i "s|^root:[^:]*:|root:$HASH:|" package/base-files/files/etc/shadow
          sed -i 's/192.168.1.1/192.168.2.31/g' package/base-files/files/bin/config_generate
          sed -i 's/GMT0/CST-8/g' package/base-files/files/bin/config_generate
          sed -i 's/UTC/Asia\/Shanghai/g' package/base-files/files/bin/config_generate
          sed -i 's/services/system/g' feeds/luci/applications/luci-app-ttyd/root/usr/share/luci/menu.d/luci-app-ttyd.json

      - name: 配置固件文件
        run: |
          cd lede
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          # CONFIG_GRUB_CONSOLE is not set
          # CONFIG_GRUB_EFI_IMAGES is not set
          CONFIG_GRUB_TIMEOUT="0"
          CONFIG_LIBCURL_COOKIES=y
          CONFIG_LIBCURL_FILE=y
          CONFIG_LIBCURL_FTP=y
          CONFIG_LIBCURL_HTTP=y
          CONFIG_LIBCURL_MBEDTLS=y
          CONFIG_LIBCURL_NGHTTP2=y
          CONFIG_LIBCURL_NO_SMB="!"
          CONFIG_LIBCURL_PROXY=y
          # CONFIG_PACKAGE_ipv6helper is not set
          # CONFIG_PACKAGE_dnsmasq_full_ipv6 is not set
          CONFIG_KERNEL_IPV6=n
          CONFIG_KERNEL_IPV6_MULTIPLE_TABLES=n
          CONFIG_KERNEL_IPV6_SUBTREES=n
          CONFIG_KERNEL_IPV6_MROUTE=n
          CONFIG_IPV6=n
          CONFIG_LIBCURL_UNIX_SOCKETS=y
          CONFIG_LIBSODIUM_MINIMAL=y
          CONFIG_LUCI_LANG_zh_Hans=y
          CONFIG_NETIFYD_BUILD_SHARED_LIBRARY=y
          CONFIG_NETIFYD_WITH_LOCAL_LIBGCRYPT=y
          CONFIG_OPENSSL_ENGINE=y
          CONFIG_OPENSSL_OPTIMIZE_SPEED=y
          CONFIG_OPENSSL_WITH_ASM=y
          CONFIG_OPENSSL_WITH_CHACHA_POLY1305=y
          CONFIG_OPENSSL_WITH_CMS=y
          CONFIG_OPENSSL_WITH_DEPRECATED=y
          CONFIG_OPENSSL_WITH_ERROR_MESSAGES=y
          CONFIG_OPENSSL_WITH_IDEA=y
          CONFIG_OPENSSL_WITH_MDC2=y
          CONFIG_OPENSSL_WITH_PSK=y
          CONFIG_OPENSSL_WITH_SEED=y
          CONFIG_OPENSSL_WITH_SRP=y
          CONFIG_OPENSSL_WITH_TLS13=y
          CONFIG_OPENSSL_WITH_WHIRLPOOL=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_cgi-io=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_coreutils-base64=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_dns2socks=y
          CONFIG_PACKAGE_dns2tcp=y
          # CONFIG_PACKAGE_dnsmasq is not set
          CONFIG_PACKAGE_dnsmasq-full=y
          CONFIG_PACKAGE_dnsmasq_full_auth=y
          CONFIG_PACKAGE_dnsmasq_full_conntrack=y
          CONFIG_PACKAGE_dnsmasq_full_dhcp=y
          CONFIG_PACKAGE_dnsmasq_full_dnssec=y
          CONFIG_PACKAGE_dnsmasq_full_ipset=y
          CONFIG_PACKAGE_dnsmasq_full_noid=y
          CONFIG_PACKAGE_dnsmasq_full_tftp=y
          # CONFIG_PACKAGE_grub2-efi is not set
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_ip-full=y
          CONFIG_PACKAGE_ipset=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_iptables-mod-tproxy=y
          CONFIG_PACKAGE_iptables-nft=y
          CONFIG_PACKAGE_jq=y
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-ipt-core=y
          CONFIG_PACKAGE_kmod-ipt-ipset=y
          CONFIG_PACKAGE_kmod-ipt-nat=y
          CONFIG_PACKAGE_kmod-ipt-tproxy=y
          CONFIG_PACKAGE_kmod-nf-conntrack-netlink=y
          CONFIG_PACKAGE_kmod-nf-ipt=y
          CONFIG_PACKAGE_kmod-nf-socket=y
          CONFIG_PACKAGE_kmod-nft-compat=y
          CONFIG_PACKAGE_kmod-nft-socket=y
          CONFIG_PACKAGE_kmod-tun=y
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libbpf=y
          CONFIG_PACKAGE_libcap=y
          CONFIG_PACKAGE_libcares=y
          CONFIG_PACKAGE_libcurl=y
          CONFIG_PACKAGE_libelf=y
          CONFIG_PACKAGE_libev=y
          CONFIG_PACKAGE_libgcrypt=y
          CONFIG_PACKAGE_libgmp=y
          CONFIG_PACKAGE_libgpg-error=y
          CONFIG_PACKAGE_libipset=y
          CONFIG_PACKAGE_libiptext=y
          CONFIG_PACKAGE_libiptext-nft=y
          CONFIG_PACKAGE_libiptext6=y
          CONFIG_PACKAGE_libiwinfo=y
          CONFIG_PACKAGE_libiwinfo-data=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua=y
          CONFIG_PACKAGE_liblua5.4=y
          CONFIG_PACKAGE_liblucihttp=y
          CONFIG_PACKAGE_liblucihttp-lua=y
          CONFIG_PACKAGE_liblucihttp-ucode=y
          CONFIG_PACKAGE_libncurses=y
          CONFIG_PACKAGE_libnetfilter-conntrack=y
          CONFIG_PACKAGE_libnettle=y
          CONFIG_PACKAGE_libnfnetlink=y
          CONFIG_PACKAGE_libnghttp2=y
          CONFIG_PACKAGE_libopenssl=y
          CONFIG_PACKAGE_libpcap=y
          CONFIG_PACKAGE_libpcre2=y
          CONFIG_PACKAGE_libreadline=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libsodium=y
          CONFIG_PACKAGE_libstdcpp=y
          CONFIG_PACKAGE_libubus-lua=y
          CONFIG_PACKAGE_libuci-lua=y
          CONFIG_PACKAGE_libudns=y
          CONFIG_PACKAGE_libuv=y
          CONFIG_PACKAGE_libwebsockets-full=y
          CONFIG_PACKAGE_libxtables=y
          CONFIG_PACKAGE_libyaml=y
          CONFIG_PACKAGE_lua=y
          CONFIG_PACKAGE_lua-neturl=y
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-nikki=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-package-manager=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Geoview=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Haproxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Server=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Simple_Obfs=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_SingBox=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_Plus=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Plugin=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray=y
          CONFIG_PACKAGE_luci-app-passwall_Nftables_Transparent_Proxy=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-base-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-firewall-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-nikki-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-package-manager-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-ssr-plus-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-ttyd-zh-cn=y
          CONFIG_PACKAGE_luci-lib-base=y
          CONFIG_PACKAGE_luci-lib-ip=y
          CONFIG_PACKAGE_luci-lib-ipkg=y
          CONFIG_PACKAGE_luci-lib-jsonc=y
          CONFIG_PACKAGE_luci-lib-nixio=y
          CONFIG_PACKAGE_luci-light=y
          CONFIG_PACKAGE_luci-lua-runtime=y
          CONFIG_PACKAGE_luci-mod-admin-full=y
          CONFIG_PACKAGE_luci-mod-network=y
          CONFIG_PACKAGE_luci-mod-status=y
          CONFIG_PACKAGE_luci-mod-system=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-proto-ppp=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          CONFIG_PACKAGE_microsocks=y
          CONFIG_PACKAGE_mosdns=y
          CONFIG_PACKAGE_netifyd=y
          CONFIG_PACKAGE_nikki=y
          CONFIG_PACKAGE_opkg=y
          CONFIG_PACKAGE_resolveip=y
          CONFIG_PACKAGE_rpcd=y
          CONFIG_PACKAGE_rpcd-mod-file=y
          CONFIG_PACKAGE_rpcd-mod-iwinfo=y
          CONFIG_PACKAGE_rpcd-mod-luci=y
          CONFIG_PACKAGE_rpcd-mod-rrdns=y
          CONFIG_PACKAGE_rpcd-mod-ucode=y
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_shadowsocks-libev-config=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-server=y
          CONFIG_PACKAGE_shadowsocks-rust-sslocal=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-check=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-redir=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-server=y
          CONFIG_PACKAGE_simple-obfs-client=y
          CONFIG_PACKAGE_sing-box=y
          CONFIG_PACKAGE_tcping=y
          CONFIG_PACKAGE_terminfo=y
          CONFIG_PACKAGE_ttyd=y
          CONFIG_PACKAGE_ucode-mod-html=y
          CONFIG_PACKAGE_ucode-mod-lua=y
          CONFIG_PACKAGE_ucode-mod-math=y
          CONFIG_PACKAGE_uhttpd=y
          CONFIG_PACKAGE_uhttpd-mod-ubus=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_PACKAGE_wget-ssl=y
          CONFIG_PACKAGE_xray-core=y
          CONFIG_PACKAGE_xtables-nft=y
          CONFIG_PACKAGE_yq=y
          CONFIG_PCRE2_JIT_ENABLED=y
          CONFIG_RUBY_ENABLE_YJIT=y
          CONFIG_SINGBOX_WITH_CLASH_API=y
          CONFIG_SINGBOX_WITH_ECH=y
          CONFIG_SINGBOX_WITH_GVISOR=y
          CONFIG_SINGBOX_WITH_QUIC=y
          CONFIG_SINGBOX_WITH_REALITY_SERVER=y
          CONFIG_SINGBOX_WITH_UTLS=y
          CONFIG_SINGBOX_WITH_WIREGUARD=y
          CONFIG_TARGET_KERNEL_PARTSIZE=200
          # CONFIG_TARGET_ROOTFS_EXT4FS is not set
          CONFIG_TARGET_ROOTFS_PARTSIZE=400
          # CONFIG_TARGET_ROOTFS_TARGZ is not set
          # CONFIG_PACKAGE_dnsmasq_full_dhcpv6 is not set
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
  
      - name: 下载DL库
        run: |
          cd lede
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 开始编译固件
        run: |
          cd lede
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s

      - name: 上传固件
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt
          path: lede/bin/targets/x86/64/*

      - name: 获取release ID
        id: get-release
        run: |
          # 获取最新 Release 的信息（排除草稿和预发布）
          RELEASE_JSON=$(curl -s -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          RELEASE_ID=$(echo "$RELEASE_JSON" | jq -r '.id')
          TAG_NAME=$(echo "$RELEASE_JSON" | jq -r '.tag_name')

          # 输出变量供后续步骤使用
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: 删除上次release
        if: env.RELEASE_ID != 'null'
        run: |
          # 删除 Release
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}"

          # 删除关联的标签
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/${{ env.TAG_NAME }}"  

      - name: 获取发布时间
        id: timestamp
        run: |
          echo "CURRENT_TIMESTAMP=$(date -u +"%Y%m%d%H%M%S")" >> $GITHUB_ENV

      - name: 发布固件
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.SOURCE_REPO_TOKEN }}
          file: lede/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined.img
          asset_name: openwrt.img
          tag: openwrt-${{ env.CURRENT_TIMESTAMP }}
          overwrite: true          
            
          

      - name: 删除上次运行记录
        env:
          GH_TOKEN: ${{ secrets.SOURCE_REPO_TOKEN }}
        run: |
          current_run_id=$(curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs \
            | jq -r '.workflow_runs[0].id')
          previous_run_id=$(curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs \
            | jq -r '.workflow_runs[1].id')
          curl -X DELETE -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/$previous_run_id





          
